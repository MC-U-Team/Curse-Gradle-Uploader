plugins {
	id "java-gradle-plugin"
	id "groovy"
	id "maven-publish"
	id "eclipse"
	id "com.github.johnrengelman.shadow" version "7.1.2"
}

group = "info.u-team.curse_gradle_uploader"
archivesBaseName = "curse_gradle_uploader"
version = "1.5.0"
description = "Gradle plugin to upload artifacts to CurseForge"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
	withSourcesJar()
	withJavadocJar()
}

sourceSets {
	main {
		java {
			srcDirs = []
		}
		groovy {
			srcDirs = [
				"src/main/java",
				"src/main/groovy"
			]
		}
	}
}

gradlePlugin {
	plugins {
		gradleFilesPlugin {
			id = "info.u_team.curse_gradle_uploader"
			implementationClass = "info.u_team.curse_gradle_uploader.CurseGradlePlugin"
		}
	}
	automatedPublishing = false
}

// Fix no sources for gradle api (https://stackoverflow.com/questions/22694199/gradle-api-sources-and-doc-when-writing-gradle-plugins)
plugins.withType(EclipsePlugin) {
	plugins.withType(JavaBasePlugin) {
		eclipse {
			classpath {
				file {
					whenMerged { classpath ->
						final def gradleHome = gradle.getGradleHomeDir().absolutePath.replace(File.separator, "/")
						final def gradleSourceDirectory = "${gradleHome}/src"
						classpath.entries.each { entry ->
							if (entry in org.gradle.plugins.ide.eclipse.model.AbstractLibrary && entry.library.path.contains('generated-gradle-jars')) {
								entry.sourcePath = new org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory().fromPath(gradleSourceDirectory)
							}
						}
					}
				}
			}
		}
	}
}

repositories {
	mavenCentral()
}

configurations {
	implementationDependencies
	implementation.extendsFrom(implementationDependencies)
}

dependencies {
	implementationDependencies group: "com.google.guava", name: "guava", version: "31.1-jre"
	implementationDependencies group: "com.google.code.gson", name: "gson", version: "2.9.0"
	implementationDependencies group: "org.apache.httpcomponents", name: "httpmime", version: "4.5.13"
	implementationDependencies group: "org.apache.httpcomponents", name: "httpclient", version: "4.5.13"
}

jar.manifest.mainAttributes([
	"Implementation-Title": project.name,
	"Implementation-Version": project.version
])

[compileJava, compileGroovy].each {
	it.options.encoding = "UTF-8"
	it.options.deprecation = true
	it.options.fork = true
}

shadowJar {
	configurations = [
		project.configurations.implementationDependencies
	]
}

components.java.withVariantsFromConfiguration(configurations.shadowRuntimeElements) {
	skip()
}

publishing {
	repositories {
		maven {
			url layout.buildDirectory.dir("mavenRepo")
		}
	}
	publications {
		mavenJava(MavenPublication) {
			artifactId = project.archivesBaseName
			
			from components.java
		}
	}
}