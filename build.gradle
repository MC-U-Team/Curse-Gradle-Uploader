plugins {
	id "groovy"
	id "idea"
	id "maven-publish"
	id "com.github.johnrengelman.shadow" version "6.1.0"
}

version = "1.4.0"
group = "info.u-team.curse_gradle_uploader"
description = "Gradle plugin to upload artifacts to CurseForge"
archivesBaseName = "curse_gradle_uploader"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
}

dependencies {
	compileOnly gradleApi()
	compileOnly localGroovy()
	
	implementation group: "net.sf.trove4j", name: "trove4j", version: "3.0.3"
	implementation group: "com.google.guava", name: "guava", version: "19.0"
	implementation group: "com.google.code.gson", name: "gson", version: "2.6.2"
	implementation group: "org.apache.httpcomponents", name: "httpmime", version: "4.5.2"
	implementation group: "org.apache.httpcomponents", name: "httpclient", version: "4.5.2"
}

jar.manifest.mainAttributes([
	"Implementation-Title"  : project.name,
	"Implementation-Version": project.version
])

task javadocJar(type: Jar, dependsOn: javadoc) {
	from javadoc.destinationDir
	archiveClassifier.set("javadoc")
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	archiveClassifier.set("sources")
}

artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

assemble.dependsOn javadocJar, sourcesJar

[compileJava, compileGroovy].each {
	it.options.encoding = "UTF-8"
	it.options.deprecation = true
	it.options.fork = true
}

tasks.withType(PublishToMavenRepository) {
	onlyIf {
		getValue("mavenpass") != null
	}
}

publishing {
	publish.dependsOn build
	
	repositories {
		maven {
			url "https://repo.u-team.info"
			credentials {
				username = "maven"
				password = getValue("mavenpass")
			}
		}
	}
	
	publications {
		mavenJava(MavenPublication) {
			from components.java
			
			groupId = project.group
			artifactId = project.archivesBaseName
			version = project.version
			
			pom {
				name = project.archivesBaseName
				description = project.description
				url = "https://github.com/MC-U-Team/CurseGradleUploader"
				scm {
					url = "https://github.com/MC-U-Team/CurseGradleUploader"
					connection = "scm:git:git://github.com/MC-U-Team/CurseGradleUploader.git"
					developerConnection = "scm:git:git@github.com:MC-U-Team/CurseGradleUploader.git"
				}
				issueManagement {
					system = "github"
					url = "https://github.com/MC-U-Team/CurseGradleUploader/issues"
				}
				licenses {
					license {
						name = "MIT"
						url = "https://github.com/MC-U-Team/CurseGradleUploader/blob/master/LICENSE.txt"
						distribution = "repo"
					}
				}
				developers {
					developer {
						name = "matthewprenger"
					}
					developer {
						name = "HyCraftHD"
					}
				}
			}
		}
	}
}

def getValue(name) {
	def envVariable = System.getenv(name)
	if(envVariable != null) {
		return envVariable
	} else {
		if (project.hasProperty(name)) {
			return project.getProperty(name)
		}
	}
	return null;
}